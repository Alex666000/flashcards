@use 'sass:selector';
@use 'sass:list';

@mixin flex($justify: center, $align: center, $direction: null, $wrap: null) {
    display: flex;
    flex-flow: $direction $wrap;
    align-items: $align;
    justify-content: $justify;
}

// Порядок переменных имеет значение
@mixin typography($size: null, $weight: null, $line-height: null) {
    margin: 0;

    @if $size {
        font-size: var(--font-size-#{$size});
    }

    @if $weight {
        font-weight: var(--font-weight-#{$weight});
    }

    @if $line-height {
        line-height: var(--line-height-#{$line-height});
    }
}

@mixin card-container(
    $isFlex: false,
    $justify: center,
    $align: center,
    $direction: null,
    $wrap: null
) {
    max-width: 420px;
    padding: 30px;

    @if $isFlex {
        @include flex($justify, $align, $direction, $wrap);
    }
}

// Код, используемый для сброса стилей пользовательского агента, примененных к вводу с автоматически
// вставленными учетными данными.
// Миксин должен использоваться внутри набора правил, а не на верхнем уровне таблицы стилей.
// Он также создает имя класса &Disabled для использования в классах компонентов
@mixin reset-input-autofill(
    $bg-color,
    $text-color,
    $disabled-bg-color: $bg-color,
    $disabled-text-color: $text-color
) {
    @if not & {
        @error 'The reset-input-autofill mixin has been used in the global scope. It is only allowed to be used inside an arbitrary ruselet.';
    }

    $parent: selector.append(&, ':-webkit-autofill');
    $parent-disabled: selector.append(&, 'Disabled:-webkit-autofill');

    --text-color: #{$text-color};
    --bg-color: #{$bg-color};

    // prettier-ignore
    @at-root #{$parent, selector.append($parent, ':hover, :focus, :active')} {
        box-shadow: 0 0 0 4em var(--bg-color) inset !important;

        -webkit-text-fill-color: var(--text-color) !important;
    }

    @at-root #{$parent-disabled} {
        --text-color: #{$disabled-text-color};
        --bg-color: #{$disabled-bg-color};
    }
}

$all-form-items: container, title, form, field, input, caption, button, hint, link;

// Чтобы расширить или перезаписать стили миксина,
// используйте @extend at-rule с соответствующим placeholder-selector под вызовом миксина
@mixin form-card($isFlex: true, $items: ()) {
    %container {
        @include card-container($isFlex, $justify: null, $direction: column);
    }

    %title {
        margin-bottom: 24px;
    }

    %form {
        @if $isFlex {
            @include flex($justify: null, $direction: column);

            width: 100%;
        }
    }

    %field {
        @if $isFlex {
            width: 100%;
        }

        margin-bottom: 10px;
    }

    %input {
        @include reset-input-autofill(
            $bg-color: var(--color-dark-700),
            $text-color: var(--color-light-100),
            $disabled-text-color: var(--color-dark-300)
        );
    }

    %caption {
        margin-inline: 2px;
        color: var(--color-light-900);
    }

    %button {
        margin-top: 24px;
    }

    %hint {
        margin-top: 20px;
        color: var(--color-light-900);
    }

    %link {
        @include typography($size: m, $weight: bold, $line-height: m);

        margin-top: 10px;
    }

    @each $item in $items {
        @if not list.index($all-form-items, $item) {
            @error "#{$item} item is not supported by mixin. List of supported items: #{$all-form-items}";
        }

        .#{$item} {
            @extend %#{$item} !optional;
        }
    }
}
